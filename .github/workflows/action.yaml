name: CI
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_TAG }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_TAG }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST}}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME}}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY}}
      DEBUG: ${{ secrets.DEBUG }}
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_KEY }}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_SECRET }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: render config
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env_example"
      - name: update compose
        run: |
          export IMAGE_TAG=${{ secrets.IMAGE_TAG }}
          envsubst < deploy/docker-compose.yaml > deploy/tmp.docker-compose.yaml
          mv deploy/tmp.docker-compose.yaml deploy/docker-compose.yaml
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "deploy/*"
          target: "backend"
          strip_components: 1
      - name: run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd backend
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker-compose pull
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker-compose down
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker-compose up -d
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker system prune -a -f
